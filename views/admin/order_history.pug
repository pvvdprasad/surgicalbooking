include header.pug
style.
    #neworder{color:#333}
    #orderhistory{text-decoration:underline;}
    .uparrow{width:15px;cursor:pointer}
    // var i = 1
link(rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200')
.calendar-container
  header.calendar-header
    p.calendar-current-date
    .calendar-navigation
      span#calendar-prev.material-symbols-rounded chevron_left
      span#calendar-next.material-symbols-rounded chevron_right
  .calendar-body
    ul.calendar-weekdays(style='padding:0')
      li Sun
      li Mon
      li Tue
      li Wed
      li Thu
      li Fri
      li Sat
    ul.calendar-dates(style='padding:0')
style.
  * {
  margin: 0;
  padding: 0;
  font-family: 'Poppins', sans-serif;
  }
  body {
  /* display: flex;
  background: #ef62da;
  min-height: 100vh;
  padding: 0 10px;
  align-items: center;
  justify-content: center; */
  }
  .calendar-container {
  background: #fff;
  width: 300px;
  margin:10px;
  float:left;
  border-radius: 10px;
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.12);
  border: 1px solid #333;
  }
  .calendar-container header {
  display: flex;
  align-items: center;
  padding: 0px 20px;
  justify-content: space-between;
  }
  header .calendar-navigation {
  display: flex;
  }
  header .calendar-navigation span {
  height: 38px;
  width: 38px;
  margin: 0 1px;
  cursor: pointer;
  text-align: center;
  line-height: 38px;
  border-radius: 50%;
  user-select: none;
  color: #aeabab;
  font-size: 1.9rem;
  }
  .calendar-navigation span:last-child {
  margin-right: -10px;
  }
  header .calendar-navigation span:hover {
  background: #f2f2f2;
  }
  header .calendar-current-date {
  font-weight: 500;
  font-size: 1.45rem;
  }
  .calendar-body {
  padding: 10px;
  }
  .calendar-body ul {
  list-style: none;
  flex-wrap: wrap;
  display: flex;
  text-align: center;
  }
  .calendar-body .calendar-dates {
  /* margin-bottom: 20px; */
  }
  .calendar-body li {
  width: calc(100% / 7);
  font-size: 1.07rem;
  color: #414141;
  }
  .calendar-body .calendar-weekdays li {
  cursor: default;
  font-weight: 500;
  }
  .calendar-body .calendar-dates li {
  margin-top: 10px;
  position: relative;
  z-index: 1;
  cursor: pointer;
  }
  .calendar-dates li.inactive {
  color: #aaa;
  }
  .calendar-dates li.active {
  color: #fff;
  }
  .calendar-dates li::before {
  position: absolute;
  content: "";
  z-index: -1;
  top: 50%;
  left: 50%;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  }
  #blackscr{background:#FFF;width:100%;height:100%;position:absolute;z-index:9998;display:none;opacity:.5}
  p{margin:0}
  #megadiv{position:absolute;display:none;border:1px solid #999; width:30%;min-height:200px;background:#FAFAFA;padding:10px;margin:0 30%;z-index:9999;top:18%}
  .calendar-dates li.active::before {
  background: #6332c5;
  }
  .calendar-dates li:not(.active):hover::before {
  background: #e4e1e1;
  }
script.
  let date=new Date(); // creates a new date object with the current date and time
  let year=date.getFullYear(); // gets the current year
  let month=date.getMonth(); // gets the current month (index based, 0-11)
  const day=document.querySelector(".calendar-dates"); // selects the element with class "calendar-dates"
  const currdate=document.querySelector(".calendar-current-date"); // selects the element with class "calendar-current-date"
  const prenexIcons=document.querySelectorAll(".calendar-navigation span"); // selects all elements with class "calendar-navigation span"
  const months=[
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December"]; // array of month names
  // function to generate the calendar
  function load_dates(){    
    var hid = document.getElementsByName('inputhid');
    arr = [];//console.log('--------');console.log(hid);console.log('--------');
    for(i=0;i<hid.length;i++){
        if(!arr.includes(hid[i].value)){
        //console.log(hid[i].value);
        arr.push(hid[i].value);
        }
    }
    return arr;
  }
  function calc_date(arr, d,m,y){
    str = '';m++;
    for(i=0;i<arr.length;i++){
    // 07/13/2023
    sa = arr[i].split('/');
    //console.log(sa);
    //console.log(parseInt(sa[1])+'=='+parseInt(d) +'&&'+ parseInt(sa[0])+'=='+parseInt(m)+' &&'+ parseInt(sa[2])+'=='+parseInt(y));
    if(parseInt(sa[1])==parseInt(d) && parseInt(sa[0])==parseInt(m) && parseInt(sa[2])==parseInt(y)){
    str='active';//console.log('worked at..'+d);break;
    }
    //if(m===date.getDate() && month===new Date().getMonth() && year===new Date().getFullYear())
    }
    return str;
  }
  
  function showrecords(i){
    console.log(i);
    $.post('/admin/get_day_records',{m:gm,y:gy,d:i},function(data){
            o('spandata').innerHTML=data.html+data.spanhtml;
            // manipulate();
        });
  }
  const manipulate=()=> {
  //console.log('The page is loaded...');
  arr=load_dates();
  // get the first day of the month
  let dayone=new Date(year, month, 1).getDay();
  // get the last date of the month
  let lastdate=new Date(year, month + 1, 0).getDate();
  // get the day of the last date of the month
  let dayend=new Date(year, month, lastdate).getDay();
  // get the last date of the previous month
  let monthlastdate=new Date(year, month, 0).getDate();
  let lit=""; // variable to store the generated calendar HTML
  // loop to add the last dates of the previous month
  for (let i=dayone; i > 0; i--) {
  lit+=`<li class="inactive">${monthlastdate - i + 1}</li>`;
  }
  // loop to add the dates of the current month
  for (let i=1; i <=lastdate; i++) {
  // check if the current date is today
  let isToday=calc_date(arr,i,month,year); //i===date.getDate() && month===new Date().getMonth() && year===new Date().getFullYear() ? "": "";
  lit+=`<li class="${isToday}"`;
  lit+= ` onclick="showrecords(${i})" `;
  lit+=`>${i}</li>`;
  }
  // loop to add the first dates of the next month
  for (let i=dayend; i < 6; i++) {
  lit+=`<li class="inactive">${i - dayend + 1}</li>`
  }
  // update the text of the current date element with the formatted current month and year
  currdate.innerText=`${months[month]} ${year}`;
  // update the HTML of the dates element with the generated calendar
  day.innerHTML=lit;
  }
  //manipulate();
  // Attach a click event listener to each icon
  prenexIcons.forEach(icon=> {
  // When an icon is clicked
  icon.addEventListener("click", ()=> {
  // Check if the icon is "calendar-prev" or "calendar-next"
  month=icon.id==="calendar-prev" ? month - 1 : month + 1;
  // Check if the month is out of range
  if (month < 0 || month > 11) {
  // Set the date to the first day of the month with the new year
  date=new Date(year, month, new Date().getDate());
  // Set the year to the new year
  year=date.getFullYear();
  // Set the month to the new month
  month=date.getMonth();
  }
  else {
  // Set the date to the current date
  date=new Date();
  }
  // Call the manipulate function to update the calendar display
  //manipulate();
  
  gm=month;gy=year;
  //console.log(month+':'+year+':gm:'+gm+':'+gy);
  load_page();
  });
  });
  
#blackscr()    
#megadiv()
#cccc(style="float:left;width:50%")
    h1(style='text-align:center') Previous Orders
    .row
    span#spandata       
        table#daaat(style='width:100%;margin:auto')
           
script.
    function popo(id){
        console.log(id);
        
        $.post('/admin/get_order',{id:id},function(data){
            //o('blackscr').style.display = 'block';
            //o('megadiv').style.display = 'block';
            d=data.result[0];
            //console.log(d);
            /*
            f.fname, surgery_date,first_name,middle_name,last_name,patient_dob,side,bname,mname,model_name, power_id
            */
            html='<table><tr><td>Surger Center:'+d.fname+'</td></tr>';
            html+='<tr><td>Surgery date:'+d.surgery_date+'</td></tr>';
            html+='<tr><td>First Name:'+d.first_name+'</td></tr>';
            html+='<tr><td>Middle Name:'+d.middle_name+'</td></tr>';
            html+='<tr><td>Last Name:'+d.last_name+'</td></tr>';
            
            html+='<tr><td>Date of Birth:'+d.patient_dob+'</td></tr>';
            html+='<tr><td>Side:'+d.side+'</td></tr>';
            html+='<tr><td>Manufacturer:'+d.mname+'</td></tr>';
            html+='<tr><td>Brand:'+d.bname+'</td></tr>';
            html+='<tr><td>Model Name:'+d.model_name+'</td></tr>';
            html+='<tr><td>Power:'+d.power_id+'</td></tr></table>';
          //  html+='<tr><td><input type="button" value="Cancel" onclick="printcan(0)" class="btn cbut grey bbbutons" /><input type="button" value="Print" onclick="printcan(1)" class="btn cbut blue bbbutons" /></td></tr></table>';
            
            //o('megadiv').innerHTML = html;
            
            url = window.location.href;
            var divContents = html;
            var a = window.open(url, '', 'height=500, width=500');
            a.document.write('<html>');
            a.document.write('<body>');
            a.document.write(divContents);
            a.document.write('</body></html>');
            a.document.close();
            a.print();
            
        });
    }
    
    gm=0,gy=0;
    function printcan(id){
        if(id==0){
            o('blackscr').style.display = 'none';
            o('megadiv').style.display = 'none';
        }
    }
    $( document ).ready(function() {
        const d = new Date();
        gm = d.getMonth();
        gy = d.getFullYear();
        load_page();        
    });
    function load_page(){
        console.log(gm+':'+gy);
        $.post('/admin/get_month_records',{m:gm,y:gy},function(data){
            o('spandata').innerHTML=data.html+data.spanhtml;
             manipulate();
        });
    }